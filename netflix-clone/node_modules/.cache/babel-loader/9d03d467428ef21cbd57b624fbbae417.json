{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dream\\\\netflix-clone\\\\src\\\\Component\\\\AllRows.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport instance from '../Axios/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_URL = \"https://image.tmdb.org/t/p/orignal\";\n\nfunction AllRows(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      async function fetchData() {\n        const request = await instance.get(props.fetchURL);\n        setMovies(request.data.results); //  console.log(request.data.results);\n\n        return request;\n      }\n\n      fetchData();\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [props.fetchURL]);\n  console.log(base_URL + movies[1].poster_path);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_main_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_poster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllRows, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = AllRows;\nexport default AllRows;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllRows\");","map":{"version":3,"sources":["D:/Dream/netflix-clone/src/Component/AllRows.js"],"names":["React","useState","useEffect","instance","base_URL","AllRows","props","movies","setMovies","mounted","fetchData","request","get","fetchURL","data","results","console","log","poster_path","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,QAAQ,GAAG,oCAAjB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAO,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIO,OAAO,GAAE,IAAb;;AACG,QAAGA,OAAH,EAAW;AACN,qBAAeC,SAAf,GAA4B;AACrB,cAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,GAAT,CAAaN,KAAK,CAACO,QAAnB,CAAtB;AACAL,QAAAA,SAAS,CAACG,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT,CAFqB,CAGtB;;AACC,eAAOJ,OAAP;AACN;;AAEDD,MAAAA,SAAS;AACb;;AACJ,WAAM,MAAI;AACND,MAAAA,OAAO,GAAC,KAAR;AACH,KAFD;AAGD,GAfQ,EAeP,CAACH,KAAK,CAACO,QAAP,CAfO,CAAT;AAiBAG,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,GAACG,MAAM,CAAC,CAAD,CAAN,CAAUW,WAA/B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACK;AAAA,gBAAKZ,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,YADL,eAGK;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtCQd,O;;KAAAA,O;AAwCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport instance from '../Axios/axios';\r\n\r\nconst base_URL = \"https://image.tmdb.org/t/p/orignal\"\r\n\r\nfunction AllRows(props) {\r\n    const  [movies, setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      let mounted= true;\r\n         if(mounted){\r\n              async function fetchData () {\r\n                     const request = await instance.get(props.fetchURL);\r\n                     setMovies(request.data.results);\r\n                    //  console.log(request.data.results);\r\n                     return request;\r\n              }\r\n\r\n              fetchData()\r\n         }\r\n      return()=>{\r\n          mounted=false;\r\n      }\r\n    },[props.fetchURL]);\r\n\r\n    console.log(base_URL+movies[1].poster_path)\r\n\r\n    return (\r\n        <div className='row_main_container'>\r\n             <h3>{props.title}</h3> \r\n             \r\n             <div className=\"row_poster\">\r\n                 {/* {\r\n                     movies.map((movie)=>(\r\n                         <div className=\"poster_container\" key={movie.id}>\r\n                             <img src={`${base_URL}${movie.poster_path}`} alt=\"ss\" />\r\n                         </div>\r\n\r\n                     ))\r\n                 } */}\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllRows;"]},"metadata":{},"sourceType":"module"}