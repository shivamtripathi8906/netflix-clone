{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github Projects\\\\netflix-clone\\\\netflix-clone\\\\src\\\\Component\\\\Banner.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport instance from '../Axios/axios';\nimport request from '../Axios/requests';\nimport \"../CSS/banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setmovie] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const controller = new AbortController();\n\n    if (mounted) {\n      async function fetchData() {\n        await instance.get(request.fetchNetflixOrignals, {\n          signal: controller.signal\n        }).then(res => {\n          setmovie(res.data.results[Math.floor(Math.random() * (res.data.results.length - 1))]);\n        });\n      }\n\n      fetchData();\n    }\n\n    return () => {\n      mounted = false;\n      controller.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center top\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/w500/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\")`,\n      backgroundAttachment: \"fixed\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_maincontainter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner_title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.orignal_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twobuttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bannerButton\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bannerButton\",\n          children: \"MyList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie_overview\",\n        children: movie === null || movie === void 0 ? void 0 : movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"NLtdpsvQjfdDGdhGbwQNL1UXcLg=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["D:/Github Projects/netflix-clone/netflix-clone/src/Component/Banner.js"],"names":["React","useState","useEffect","instance","request","Banner","movie","setmovie","mounted","controller","AbortController","fetchData","get","fetchNetflixOrignals","signal","then","res","data","results","Math","floor","random","length","abort","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","backdrop_path","backgroundAttachment","title","name","orignal_name","overview"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,mBAAP;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIM,OAAO,GAAE,IAAb;AACA,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,QAAGF,OAAH,EAAW;AACN,qBAAeG,SAAf,GAA0B;AACrB,cAAMR,QAAQ,CAACS,GAAT,CAAaR,OAAO,CAACS,oBAArB,EAA0C;AAACC,UAAAA,MAAM,EAAEL,UAAU,CAACK;AAApB,SAA1C,EACNC,IADM,CACAC,GAAD,IAAO;AAACT,UAAAA,QAAQ,CAACS,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAgBL,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBI,MAAjB,GAAwB,CAAxC,CAAX,CAAjB,CAAD,CAAR;AAAmF,SAD1F,CAAN;AAGJ;;AACDX,MAAAA,SAAS;AACb;;AACD,WAAM,MAAI;AACNH,MAAAA,OAAO,GAAC,KAAR;AACAC,MAAAA,UAAU,CAACc,KAAX;AACH,KAHD;AAIH,GAfQ,EAeP,EAfO,CAAT;AAiBA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AACK,IAAA,KAAK,EAAE;AACHC,MAAAA,cAAc,EAAC,OADZ;AAEHC,MAAAA,kBAAkB,EAAC,YAFhB;AAGHC,MAAAA,gBAAgB,EAAC,WAHd;AAIHC,MAAAA,eAAe,EAAE,wCAAuCrB,KAAxC,aAAwCA,KAAxC,uBAAwCA,KAAK,CAAEsB,aAAc,IAJ1E;AAKHC,MAAAA,oBAAoB,EAAC;AALlB,KADZ;AAAA,4BASA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACK;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8B,CAAAvB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEwB,KAAP,MAAgBxB,KAAhB,aAAgBA,KAAhB,uBAAgBA,KAAK,CAAEyB,IAAvB,MAA+BzB,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAE0B,YAAtC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAMK;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBAA+B1B,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAE2B;AAAtC;AAAA;AAAA;AAAA;AAAA,cANL;AAAA;AAAA;AAAA;AAAA;AAAA,YATA,eAiBA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAzCQ5B,M;;KAAAA,M;AA2CT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport instance from '../Axios/axios';\r\nimport request from '../Axios/requests';\r\nimport \"../CSS/banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setmovie] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        let mounted= true;\r\n        const controller = new AbortController();\r\n        if(mounted){\r\n             async function fetchData(){\r\n                  await instance.get(request.fetchNetflixOrignals,{signal: controller.signal})\r\n                 .then((res)=>{setmovie(res.data.results[Math.floor(Math.random()*( res.data.results.length-1))])})\r\n                \r\n             }\r\n             fetchData()\r\n        }\r\n        return()=>{\r\n            mounted=false;\r\n            controller.abort()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <header className='banner'\r\n             style={{\r\n                 backgroundSize:\"cover\",\r\n                 backgroundPosition:\"center top\",\r\n                 backgroundRepeat:\"no-repeat\",\r\n                 backgroundImage:`url(\"https://image.tmdb.org/t/p/w500/${movie?.backdrop_path}\")`,\r\n                 backgroundAttachment:\"fixed\",\r\n             }}\r\n        >\r\n        <div className='banner_maincontainter'>\r\n             <h1 className='banner_title'>{movie?.title || movie?.name || movie?.orignal_name}</h1>\r\n             <div className=\"twobuttonContainer\">\r\n                 <button className=\"bannerButton\">Play</button>\r\n                 <button className=\"bannerButton\">MyList</button>\r\n             </div>\r\n             <p className='movie_overview'>{movie?.overview}</p>\r\n        </div>\r\n        <div className=\"banner_bottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n"]},"metadata":{},"sourceType":"module"}